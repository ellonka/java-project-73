plugins {
	id 'application'
	id 'checkstyle'
	id 'jacoco'
	id 'com.adarshr.test-logger' version '3.2.0'
	id 'org.springframework.boot' version '3.0.2'
	id 'org.liquibase.gradle' version '2.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

application {
	mainClass = 'hexlet.code.AppApplication'
}

repositories {
	mavenCentral()
}

jacoco {
	toolVersion = "0.8.8"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	liquibaseRuntime 'org.liquibase:liquibase-core:4.16.1'
	liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.0'
	liquibaseRuntime 'info.picocli:picocli:4.6.1'
	liquibaseRuntime 'mysql:mysql-connector-java:5.1.34'
	liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
	liquibaseRuntime sourceSets.main.output

	runtimeOnly 'com.h2database:h2:1.4.200'
}

testlogger {
	showStandardStreams true
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
	}
}

tasks.named('test') {
	finalizedBy jacocoTestReport
	useJUnitPlatform()
}

liquibase {
	activities {
		main {
			// Указываем путь, по которому будет сгенерирован файл миграции
			changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
			// Указывем источник, с которым будут сравниваться изменения
			// Это база данных, изначально она пустая
			url 'jdbc:h2:./taskManager'
			// Имя пользователя и пароль для подключения к базе
			username ''
			password ''
			// Сравниваем с моделями, задавая пакет
			referenceUrl 'hibernate:spring:io.hexlet.code.model.' +
					// Указываем диалект
					'?dialect=org.hibernate.dialect.H2Dialect' +
					// Указываем правила именования таблиц и столбцов,
					// чтобы они соответствовали правилам Spring
					'&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
		}
	}
}

task stage(dependsOn: [clean, installDist])
installDist.mustRunAfter clean
